name: frontend pipeline
permissions:
  id-token: write
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "21"

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: |
          cd ./Frontend
          npm ci

      - name: List installed packages
        run: |
          cd ./Frontend
          npm list

      - name: Build the project
        run: |
          cd ./Frontend
          npm run build

    # - name: Archive production artifacts
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: frontend-build
    #     path: path/to/your/build/directory
  package:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.CONTAINER_REPO_USERNAME  }}
          password: ${{ secrets.CONTAINER_REPO_PASSWORD  }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./Frontend
          file: ./Frontend/Dockerfile
          push: true
          tags: vladina/tree-task-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: OIDC Login to Azure Public Cloud with Az CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
          enable-AzPSSession: false

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Configure kubectl to connect to AKS cluster
        run: |
          az aks get-credentials --resource-group tree-task --name tree-task-cluster
        
      - name: Deploy to AKS
        run: |
          kubectl apply -f ./Infrastructure/frontend_deployment/deployment.yaml
          kubectl apply -f ./Infrastructure/frontend_deployment/service.yaml
          kubectl apply -f ./Infrastructure/ingress.yaml
