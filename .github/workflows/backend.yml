name: backend pipeline
permissions:
  id-token: write
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          cd ./Backend
          npm install

      - name: Build the project
        run: |
          cd ./Backend
          npm run build
        env:
          NODE_ENV: production

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Run tests
        run: |
          cd ./Backend
          npm install
          npm test

  package:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.CONTAINER_REPO_USERNAME }}
          password: ${{ secrets.CONTAINER_REPO_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./Backend
          file: ./Backend/Dockerfile
          push: true
          tags: vladina/tree-task-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: OIDC Login to Azure Public Cloud with Az CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
          enable-AzPSSession: false

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Configure kubectl to connect to AKS cluster
        run: |
          az aks get-credentials --resource-group tree-task --name tree-task-cluster
        
      - name: Deploy to AKS
        run: |
          kubectl apply -f ./Infrastructure/backend_deployment/deployment.yaml
          kubectl rollout restart deployment.apps/backend-deployment
          kubectl apply -f ./Infrastructure/backend_deployment/service.yaml

